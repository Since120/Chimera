"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/layout",{

/***/ "(app-pages-browser)/./src/context/auth-context.tsx":
/*!**************************************!*\
  !*** ./src/context/auth-context.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst defaultContext = {\n    user: null,\n    availableGuilds: [],\n    token: null,\n    loading: true,\n    isAuthenticated: false,\n    login: ()=>{},\n    logout: async ()=>{},\n    refreshSession: async ()=>{}\n};\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContext);\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [internalAvailableGuilds, setInternalAvailableGuilds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    // --- Stabile Funktionen ---\n    const handleLogout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[handleLogout]\": async function() {\n            let redirect = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n            console.log('handleLogout: Starting logout...');\n            const currentPath = window.location.pathname;\n            setUser(null);\n            setInternalAvailableGuilds([]);\n            setToken(null);\n            setIsAuthenticated(false);\n            setLoading(false);\n            const tokenKey = \"chimera_auth_token\" || 0;\n            localStorage.removeItem(tokenKey);\n            localStorage.removeItem('selectedGuildId');\n            try {\n                const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signOut();\n                if (error) console.error('handleLogout: Supabase signOut error:', error);\n                else console.log('handleLogout: Supabase signOut successful.');\n            } catch (error) {\n                console.error('handleLogout: Unexpected signOut error:', error);\n            }\n            if (redirect && !currentPath.startsWith('/auth/login')) {\n                console.log('handleLogout: Redirecting to /auth/login');\n                router.push('/auth/login');\n            }\n        }\n    }[\"AuthProvider.useCallback[handleLogout]\"], [\n        router\n    ]);\n    const fetchBackendSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[fetchBackendSession]\": async (supabaseToken)=>{\n            console.log('[AuthContext] fetchBackendSession: Fetching backend session...');\n            // Set loading true ONLY if not already authenticated maybe? Or always? Let's keep it simple for now.\n            // setLoading(true); // Avoid setting loading true here if called from listener? Might cause flicker.\n            try {\n                var _sessionData_user;\n                const apiUrl = \"http://localhost:3000\" || 0;\n                const response = await fetch(\"\".concat(apiUrl, \"/api/v1/auth/session\"), {\n                    headers: {\n                        Authorization: \"Bearer \".concat(supabaseToken)\n                    }\n                });\n                if (!response.ok) {\n                    const errorText = await response.text().catch({\n                        \"AuthProvider.useCallback[fetchBackendSession]\": ()=>\"Status \".concat(response.status)\n                    }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                    console.error(\"[AuthContext] fetchBackendSession: Error \".concat(response.status, \": \").concat(errorText));\n                    await handleLogout(false);\n                    return null;\n                }\n                const sessionData = await response.json();\n                console.log('[AuthContext] fetchBackendSession: Success. User:', (_sessionData_user = sessionData.user) === null || _sessionData_user === void 0 ? void 0 : _sessionData_user.username);\n                setToken({\n                    \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>prev === supabaseToken ? prev : supabaseToken\n                }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                setUser({\n                    \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>JSON.stringify(prev) === JSON.stringify(sessionData.user) ? prev : sessionData.user\n                }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                setInternalAvailableGuilds({\n                    \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>JSON.stringify(prev) === JSON.stringify(sessionData.availableGuilds) ? prev : sessionData.availableGuilds\n                }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                setIsAuthenticated(true);\n                const tokenKey = \"chimera_auth_token\" || 0;\n                localStorage.setItem(tokenKey, supabaseToken);\n                return sessionData;\n            } catch (error) {\n                console.error('[AuthContext] fetchBackendSession: Unexpected error:', error);\n                await handleLogout(false);\n                return null;\n            } finally{\n                // Ensure loading is false after attempting fetch\n                setLoading(false);\n            }\n        }\n    }[\"AuthProvider.useCallback[fetchBackendSession]\"], [\n        handleLogout\n    ]);\n    // --- Auth State Listener ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log('[AuthContext] Setting up onAuthStateChange listener');\n            setLoading(true); // Set loading true when listener starts\n            const { data: authListener } = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.onAuthStateChange({\n                \"AuthProvider.useEffect\": async (event, session)=>{\n                    console.log('[AuthContext] Event:', event, 'Session present:', !!session);\n                    if (event === 'INITIAL_SESSION') {\n                        if (session === null || session === void 0 ? void 0 : session.access_token) {\n                            await fetchBackendSession(session.access_token);\n                        } else {\n                            // No initial session, we are not authenticated\n                            await handleLogout(false); // Reset state without redirect\n                        }\n                    } else if (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED') {\n                        if (session === null || session === void 0 ? void 0 : session.access_token) {\n                            await fetchBackendSession(session.access_token);\n                        } else {\n                            // Should not happen for SIGNED_IN/TOKEN_REFRESHED, but handle defensively\n                            await handleLogout(false);\n                        }\n                    } else if (event === 'SIGNED_OUT') {\n                        await handleLogout(true); // Logout with redirect\n                    }\n                // setLoading(false) is now handled in fetchBackendSession/handleLogout\n                }\n            }[\"AuthProvider.useEffect\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    var _authListener_subscription;\n                    console.log('[AuthContext] Removing onAuthStateChange listener');\n                    authListener === null || authListener === void 0 ? void 0 : (_authListener_subscription = authListener.subscription) === null || _authListener_subscription === void 0 ? void 0 : _authListener_subscription.unsubscribe();\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        fetchBackendSession,\n        handleLogout\n    ]); // Stable dependencies\n    // --- Other Functions ---\n    const login = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[login]\": async ()=>{\n            console.log('Login: Starting Supabase Discord OAuth Flow...');\n            localStorage.removeItem(\"chimera_auth_token\" || 0);\n            localStorage.removeItem('selectedGuildId');\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signInWithOAuth({\n                provider: 'discord',\n                options: {\n                    redirectTo: \"\".concat(window.location.protocol, \"//\").concat(window.location.host, \"/auth/callback\"),\n                    scopes: 'identify guilds'\n                }\n            });\n            if (error) console.error('Login Error:', error);\n        }\n    }[\"AuthProvider.useCallback[login]\"], []);\n    const refreshSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[refreshSession]\": async ()=>{\n            console.log('[AuthContext] refreshSession called...');\n            const { data: { session } } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.getSession();\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await fetchBackendSession(session.access_token);\n            } else {\n                console.warn('[AuthContext] refreshSession: No valid Supabase session found.');\n                await handleLogout(true);\n            }\n        }\n    }[\"AuthProvider.useCallback[refreshSession]\"], [\n        fetchBackendSession,\n        handleLogout\n    ]);\n    // --- Redirect Effect ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log(\"[AuthContext Redirect Check] loading: \".concat(loading, \", isAuthenticated: \").concat(isAuthenticated, \", pathname: \").concat(pathname));\n            if (!loading && isAuthenticated && !pathname.startsWith('/dashboard') && !pathname.startsWith('/auth/callback')) {\n                console.log('[AuthContext Redirect Action] Redirecting to /dashboard...');\n                router.replace('/dashboard');\n            }\n        }\n    }[\"AuthProvider.useEffect\"], [\n        loading,\n        isAuthenticated,\n        pathname,\n        router\n    ]);\n    // --- Memoized Context Value ---\n    // Memoize availableGuilds separately only if it changes significantly\n    const memoizedAvailableGuilds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"AuthProvider.useMemo[memoizedAvailableGuilds]\": ()=>{\n            console.log('[AuthContext] Memoizing availableGuilds...');\n            return internalAvailableGuilds;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"AuthProvider.useMemo[memoizedAvailableGuilds]\"], [\n        JSON.stringify(internalAvailableGuilds)\n    ]); // Use deep comparison, less efficient but safer for now\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"AuthProvider.useMemo[contextValue]\": ()=>{\n            console.log('[AuthContext] Recalculating context value.');\n            return {\n                user,\n                availableGuilds: memoizedAvailableGuilds,\n                token,\n                loading,\n                isAuthenticated,\n                login,\n                logout: handleLogout,\n                refreshSession\n            };\n        }\n    }[\"AuthProvider.useMemo[contextValue]\"], [\n        user,\n        memoizedAvailableGuilds,\n        token,\n        loading,\n        isAuthenticated,\n        login,\n        handleLogout,\n        refreshSession\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\info\\\\Documents\\\\Discord Bot\\\\Chimera\\\\apps\\\\frontend\\\\src\\\\context\\\\auth-context.tsx\",\n        lineNumber: 205,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"b5usR34X+AuueXdxe8jBnhLwVto=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname\n    ];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/auth-context.tsx\n"));

/***/ })

});