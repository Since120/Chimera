"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/layout",{

/***/ "(app-pages-browser)/./src/context/auth-context.tsx":
/*!**************************************!*\
  !*** ./src/context/auth-context.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n// Standardwerte\nconst defaultContext = {\n    user: null,\n    availableGuilds: [],\n    token: null,\n    loading: true,\n    isAuthenticated: false,\n    login: ()=>{},\n    logout: async ()=>{},\n    refreshSession: async ()=>{}\n};\n// Erstellen des Kontexts\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContext);\n// Hook für den Zugriff auf den Kontext\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Provider-Komponente\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [internalAvailableGuilds, setInternalAvailableGuilds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    // --- Stabile Funktionen ---\n    const handleLogout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[handleLogout]\": async function() {\n            let redirect = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n            console.log('handleLogout: Starting logout...');\n            const currentPath =  true ? window.location.pathname : 0; // Check for window\n            setUser(null);\n            setInternalAvailableGuilds([]);\n            setToken(null);\n            setIsAuthenticated(false);\n            setLoading(false); // Stop loading on logout\n            if (true) {\n                const tokenKey = \"chimera_auth_token\" || 0;\n                localStorage.removeItem(tokenKey);\n                localStorage.removeItem('selectedGuildId'); // Korrekter Schlüssel\n            }\n            try {\n                const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signOut();\n                if (error) console.error('handleLogout: Supabase signOut error:', error);\n                else console.log('handleLogout: Supabase signOut successful.');\n            } catch (error) {\n                console.error('handleLogout: Unexpected signOut error:', error);\n            }\n            if (redirect && !currentPath.startsWith('/auth/login') && \"object\" !== 'undefined') {\n                console.log('handleLogout: Redirecting to /auth/login');\n                router.push('/auth/login'); // Use Next.js router for client-side navigation\n            } else {\n                console.log('handleLogout: No redirect needed or desired.');\n            }\n        }\n    }[\"AuthProvider.useCallback[handleLogout]\"], [\n        router\n    ]); // router ist stabil\n    const fetchBackendSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[fetchBackendSession]\": async (supabaseToken)=>{\n            console.log('[AuthContext] fetchBackendSession: Fetching backend session...');\n            // Avoid setting loading true if component unmounted before fetch completes\n            let isMounted = true;\n            setLoading(true);\n            try {\n                var _sessionData_user;\n                const apiUrl = \"http://localhost:3000\" || 0;\n                const response = await fetch(\"\".concat(apiUrl, \"/api/v1/auth/session\"), {\n                    headers: {\n                        Authorization: \"Bearer \".concat(supabaseToken)\n                    }\n                });\n                if (!response.ok) {\n                    const errorText = await response.text().catch({\n                        \"AuthProvider.useCallback[fetchBackendSession]\": ()=>\"Status \".concat(response.status)\n                    }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                    console.error(\"[AuthContext] fetchBackendSession: Error \".concat(response.status, \": \").concat(errorText));\n                    if (isMounted) await handleLogout(false); // Nur ausloggen, wenn noch gemounted\n                    return null;\n                }\n                const sessionData = await response.json();\n                console.log('[AuthContext] fetchBackendSession: Success. User:', (_sessionData_user = sessionData.user) === null || _sessionData_user === void 0 ? void 0 : _sessionData_user.username);\n                if (isMounted) {\n                    setToken({\n                        \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>prev === supabaseToken ? prev : supabaseToken\n                    }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                    setUser({\n                        \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>JSON.stringify(prev) === JSON.stringify(sessionData.user) ? prev : sessionData.user\n                    }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                    setInternalAvailableGuilds({\n                        \"AuthProvider.useCallback[fetchBackendSession]\": (prev)=>JSON.stringify(prev) === JSON.stringify(sessionData.availableGuilds) ? prev : sessionData.availableGuilds\n                    }[\"AuthProvider.useCallback[fetchBackendSession]\"]);\n                    setIsAuthenticated(true);\n                    if (true) {\n                        const tokenKey = \"chimera_auth_token\" || 0;\n                        localStorage.setItem(tokenKey, supabaseToken);\n                    }\n                }\n                return sessionData;\n            } catch (error) {\n                console.error('[AuthContext] fetchBackendSession: Unexpected error:', error);\n                if (isMounted) await handleLogout(false);\n                return null;\n            } finally{\n                if (isMounted) setLoading(false);\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"AuthProvider.useCallback[fetchBackendSession]\"], [\n        handleLogout\n    ]); // handleLogout ist stabil\n    // --- Auth State Listener ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            let isMounted = true; // Flag to prevent state updates on unmounted component\n            console.log('[AuthContext] Setting up onAuthStateChange listener');\n            setLoading(true);\n            const { data: authListener } = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.onAuthStateChange({\n                \"AuthProvider.useEffect\": async (event, session)=>{\n                    if (!isMounted) return; // Don't run if component is unmounted\n                    console.log('[AuthContext] Event:', event, 'Session present:', !!session);\n                    if (event === 'INITIAL_SESSION' || event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED') {\n                        if (session === null || session === void 0 ? void 0 : session.access_token) {\n                            await fetchBackendSession(session.access_token);\n                        } else {\n                            if (isAuthenticated) {\n                                console.log('[AuthContext] Auth event with session but no token, logging out.');\n                                await handleLogout(false);\n                            } else {\n                                setLoading(false);\n                            }\n                        }\n                    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n                        console.log(\"[AuthContext] \".concat(event, \" event received, logging out.\"));\n                        await handleLogout(true); // Logout with redirect\n                    }\n                // setLoading is handled within fetchBackendSession/handleLogout\n                }\n            }[\"AuthProvider.useEffect\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    var _authListener_subscription;\n                    isMounted = false; // Set flag on unmount\n                    console.log('[AuthContext] Removing onAuthStateChange listener');\n                    authListener === null || authListener === void 0 ? void 0 : (_authListener_subscription = authListener.subscription) === null || _authListener_subscription === void 0 ? void 0 : _authListener_subscription.unsubscribe();\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        fetchBackendSession,\n        handleLogout,\n        isAuthenticated\n    ]); // isAuthenticated added\n    // --- Other Functions ---\n    const login = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[login]\": async ()=>{\n            console.log('Login: Starting Supabase Discord OAuth Flow...');\n            if (true) {\n                localStorage.removeItem(\"chimera_auth_token\" || 0);\n                localStorage.removeItem('selectedGuildId');\n            }\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signInWithOAuth({\n                provider: 'discord',\n                options: {\n                    redirectTo: \"\".concat(window.location.protocol, \"//\").concat(window.location.host, \"/auth/callback\"),\n                    scopes: 'identify guilds'\n                }\n            });\n            if (error) console.error('Login Error:', error);\n        }\n    }[\"AuthProvider.useCallback[login]\"], []);\n    const refreshSession = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[refreshSession]\": async ()=>{\n            console.log('[AuthContext] refreshSession called...');\n            const { data: { session } } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.getSession();\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await fetchBackendSession(session.access_token);\n            } else {\n                console.warn('[AuthContext] refreshSession: No valid Supabase session found.');\n                await handleLogout(true);\n            }\n        }\n    }[\"AuthProvider.useCallback[refreshSession]\"], [\n        fetchBackendSession,\n        handleLogout\n    ]);\n    // --- Redirect Effect ---\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log(\"[AuthContext Redirect Check] loading: \".concat(loading, \", isAuthenticated: \").concat(isAuthenticated, \", pathname: \").concat(pathname));\n            if (!loading && isAuthenticated && !pathname.startsWith('/dashboard') && !pathname.startsWith('/auth/callback')) {\n                console.log('[AuthContext Redirect Action] Redirecting to /dashboard...');\n                router.replace('/dashboard');\n            }\n        }\n    }[\"AuthProvider.useEffect\"], [\n        loading,\n        isAuthenticated,\n        pathname,\n        router\n    ]);\n    // --- Memoized Context Value ---\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"AuthProvider.useMemo[contextValue]\": ()=>{\n            console.log('[AuthContext] Recalculating context value.');\n            return {\n                user,\n                availableGuilds: internalAvailableGuilds,\n                token,\n                loading,\n                isAuthenticated,\n                login,\n                logout: handleLogout,\n                refreshSession\n            };\n        }\n    }[\"AuthProvider.useMemo[contextValue]\"], [\n        user,\n        internalAvailableGuilds,\n        token,\n        loading,\n        isAuthenticated,\n        login,\n        handleLogout,\n        refreshSession\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\info\\\\Documents\\\\Discord Bot\\\\Chimera\\\\apps\\\\frontend\\\\src\\\\context\\\\auth-context.tsx\",\n        lineNumber: 216,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"BJfqnzkHIjEi+EqcinsMt+uiSy4=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname\n    ];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/auth-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/context/guild-context.tsx":
/*!***************************************!*\
  !*** ./src/context/guild-context.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GuildProvider: () => (/* binding */ GuildProvider),\n/* harmony export */   useGuild: () => (/* binding */ useGuild)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-context */ \"(app-pages-browser)/./src/context/auth-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ useGuild,GuildProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst defaultContext = {\n    availableGuilds: [],\n    currentGuild: null,\n    setCurrentGuild: ()=>{},\n    loading: true\n};\nconst GuildContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContext);\nconst useGuild = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GuildContext);\n};\n_s(useGuild, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction GuildProvider(param) {\n    let { children } = param;\n    _s1();\n    const { availableGuilds, loading: authLoading, isAuthenticated } = (0,_auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth)(); // availableGuilds ist jetzt stabil\n    const [selectedGuild, setSelectedGuild] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Funktion zum Setzen der Guild - stabilisiert\n    const setCurrentGuildMemoized = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (guildId)=>{\n            console.log(\"[GuildContext] setCurrentGuild called with ID: \".concat(guildId));\n            const foundGuild = guildId ? availableGuilds.find({\n                \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (g)=>g.id === guildId\n            }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"]) : null;\n            setSelectedGuild({\n                \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (prevSelected)=>{\n                    if ((prevSelected === null || prevSelected === void 0 ? void 0 : prevSelected.id) === (foundGuild === null || foundGuild === void 0 ? void 0 : foundGuild.id)) {\n                        console.log(\"[GuildContext] Guild \".concat(guildId, \" is already selected.\"));\n                        return prevSelected; // Keine Änderung, Referenz behalten\n                    }\n                    if (guildId && !foundGuild) {\n                        console.error(\"[GuildContext] Attempted to set non-available guild: \".concat(guildId));\n                        // Nicht ändern, wenn nicht gefunden\n                        return prevSelected;\n                    }\n                    if (foundGuild) {\n                        localStorage.setItem('selectedGuildId', foundGuild.id);\n                        console.log(\"[GuildContext] Guild set to: \".concat(foundGuild.name));\n                        return foundGuild;\n                    } else {\n                        localStorage.removeItem('selectedGuildId');\n                        console.log('[GuildContext] Guild selection cleared.');\n                        return null;\n                    }\n                }\n            }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"]);\n        }\n    }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"], [\n        availableGuilds\n    ]); // Abhängig von den verfügbaren Guilds\n    // Effekt zur Initialisierung/Wiederherstellung der Auswahl\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GuildProvider.useEffect\": ()=>{\n            console.log('[GuildContext Initial Effect] Running. AuthLoading:', authLoading, 'IsAuth:', isAuthenticated);\n            if (!authLoading && isAuthenticated) {\n                const guildsToUse = availableGuilds || [];\n                console.log('[GuildContext Initial Effect] Guilds available:', guildsToUse.length);\n                if (guildsToUse.length === 0) {\n                    if (selectedGuild !== null) {\n                        console.log('[GuildContext Initial Effect] No guilds available, resetting selection.');\n                        setCurrentGuildMemoized(null); // Zustand über die Funktion aktualisieren\n                    }\n                    return;\n                }\n                const storedGuildId = localStorage.getItem('selectedGuildId');\n                let guildToSelect = null;\n                if (storedGuildId) {\n                    guildToSelect = guildsToUse.find({\n                        \"GuildProvider.useEffect\": (g)=>g.id === storedGuildId\n                    }[\"GuildProvider.useEffect\"]);\n                    if (!guildToSelect) {\n                        console.warn(\"[GuildContext Initial Effect] Stored guildId \".concat(storedGuildId, \" not found in available guilds.\"));\n                        localStorage.removeItem('selectedGuildId');\n                    }\n                }\n                if (!guildToSelect && guildsToUse.length > 0) {\n                    guildToSelect = guildsToUse[0];\n                    console.log('[GuildContext Initial Effect] Selecting first available guild:', guildToSelect.name);\n                    // Nur setzen, wenn nicht bereits ausgewählt\n                    if ((selectedGuild === null || selectedGuild === void 0 ? void 0 : selectedGuild.id) !== guildToSelect.id) {\n                        setCurrentGuildMemoized(guildToSelect.id);\n                    }\n                } else if (guildToSelect && (selectedGuild === null || selectedGuild === void 0 ? void 0 : selectedGuild.id) !== guildToSelect.id) {\n                    console.log(\"[GuildContext Initial Effect] Setting selected guild to stored: \".concat(guildToSelect.name));\n                    setCurrentGuildMemoized(guildToSelect.id);\n                } else if (!guildToSelect && selectedGuild !== null) {\n                    console.log('[GuildContext Initial Effect] No valid initial guild, resetting.');\n                    setCurrentGuildMemoized(null);\n                }\n            } else if (!authLoading && !isAuthenticated) {\n                if (selectedGuild !== null) {\n                    console.log('[GuildContext Initial Effect] Not authenticated, resetting selection.');\n                    setCurrentGuildMemoized(null);\n                }\n            }\n        }\n    }[\"GuildProvider.useEffect\"], [\n        authLoading,\n        isAuthenticated,\n        availableGuilds,\n        setCurrentGuildMemoized,\n        selectedGuild\n    ]); // selectedGuild hinzugefügt\n    // Memoisierten Kontextwert erstellen\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"GuildProvider.useMemo[contextValue]\": ()=>{\n            console.log('[GuildContext] Recalculating context value.');\n            return {\n                currentGuild: selectedGuild,\n                availableGuilds: availableGuilds || [],\n                setCurrentGuild: setCurrentGuildMemoized,\n                loading: authLoading\n            };\n        }\n    }[\"GuildProvider.useMemo[contextValue]\"], [\n        selectedGuild,\n        availableGuilds,\n        setCurrentGuildMemoized,\n        authLoading\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GuildContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\info\\\\Documents\\\\Discord Bot\\\\Chimera\\\\apps\\\\frontend\\\\src\\\\context\\\\guild-context.tsx\",\n        lineNumber: 120,\n        columnNumber: 5\n    }, this);\n}\n_s1(GuildProvider, \"OsRabFJIJysx/9OQg5vtTa0FrK8=\", false, function() {\n    return [\n        _auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = GuildProvider;\nvar _c;\n$RefreshReg$(_c, \"GuildProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/guild-context.tsx\n"));

/***/ })

});