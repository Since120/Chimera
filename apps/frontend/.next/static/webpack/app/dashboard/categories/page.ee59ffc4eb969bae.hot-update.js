"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/categories/page",{

/***/ "(app-pages-browser)/./src/context/guild-context.tsx":
/*!***************************************!*\
  !*** ./src/context/guild-context.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GuildProvider: () => (/* binding */ GuildProvider),\n/* harmony export */   useGuild: () => (/* binding */ useGuild)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-context */ \"(app-pages-browser)/./src/context/auth-context.tsx\");\n/* __next_internal_client_entry_do_not_use__ useGuild,GuildProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst defaultContext = {\n    availableGuilds: [],\n    currentGuild: null,\n    setCurrentGuild: ()=>{},\n    loading: true\n};\nconst GuildContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(defaultContext);\nconst useGuild = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GuildContext);\n};\n_s(useGuild, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction GuildProvider(param) {\n    let { children } = param;\n    _s1();\n    const { availableGuilds, loading: authLoading, isAuthenticated } = (0,_auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [selectedGuild, setSelectedGuild] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Funktion zum Setzen der Guild - stabilisiert\n    const setCurrentGuildMemoized = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (guildId)=>{\n            console.log(\"[GuildContext] setCurrentGuild called with ID: \".concat(guildId));\n            const foundGuild = guildId ? availableGuilds.find({\n                \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (g)=>g.id === guildId\n            }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"]) : null;\n            setSelectedGuild({\n                \"GuildProvider.useCallback[setCurrentGuildMemoized]\": (prevSelected)=>{\n                    if ((prevSelected === null || prevSelected === void 0 ? void 0 : prevSelected.id) === (foundGuild === null || foundGuild === void 0 ? void 0 : foundGuild.id)) {\n                        console.log(\"[GuildContext] Guild \".concat(guildId, \" is already selected.\"));\n                        return prevSelected;\n                    }\n                    if (guildId && !foundGuild) {\n                        console.error(\"[GuildContext] Attempted to set non-available guild: \".concat(guildId));\n                        return prevSelected;\n                    }\n                    if (foundGuild) {\n                        localStorage.setItem('selectedGuildId', foundGuild.id);\n                        console.log(\"[GuildContext] Guild set to: \".concat(foundGuild.name));\n                        return foundGuild;\n                    } else {\n                        localStorage.removeItem('selectedGuildId');\n                        console.log('[GuildContext] Guild selection cleared.');\n                        return null;\n                    }\n                }\n            }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"]);\n        }\n    }[\"GuildProvider.useCallback[setCurrentGuildMemoized]\"], [\n        availableGuilds\n    ]);\n    // Effekt zur Initialisierung/Wiederherstellung der Auswahl\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GuildProvider.useEffect\": ()=>{\n            console.log('[GuildContext Initial Effect] Running. AuthLoading:', authLoading, 'IsAuth:', isAuthenticated);\n            if (!authLoading && isAuthenticated) {\n                const guildsToUse = availableGuilds || [];\n                console.log('[GuildContext Initial Effect] Guilds available:', guildsToUse.length);\n                if (guildsToUse.length === 0) {\n                    if (selectedGuild !== null) {\n                        console.log('[GuildContext Initial Effect] No guilds available, resetting selection.');\n                        setCurrentGuildMemoized(null);\n                    }\n                    return;\n                }\n                const storedGuildId = localStorage.getItem('selectedGuildId');\n                let guildToSelect = null;\n                if (storedGuildId) {\n                    guildToSelect = guildsToUse.find({\n                        \"GuildProvider.useEffect\": (g)=>g.id === storedGuildId\n                    }[\"GuildProvider.useEffect\"]);\n                    if (!guildToSelect) {\n                        console.warn(\"[GuildContext Initial Effect] Stored guildId \".concat(storedGuildId, \" not found in available guilds.\"));\n                        localStorage.removeItem('selectedGuildId');\n                    }\n                }\n                if (!guildToSelect && guildsToUse.length > 0) {\n                    guildToSelect = guildsToUse[0];\n                    console.log('[GuildContext Initial Effect] Selecting first available guild:', guildToSelect.name);\n                    if ((selectedGuild === null || selectedGuild === void 0 ? void 0 : selectedGuild.id) !== guildToSelect.id) {\n                        setCurrentGuildMemoized(guildToSelect.id);\n                    }\n                } else if (guildToSelect && (selectedGuild === null || selectedGuild === void 0 ? void 0 : selectedGuild.id) !== guildToSelect.id) {\n                    console.log(\"[GuildContext Initial Effect] Setting selected guild to stored: \".concat(guildToSelect.name));\n                    setCurrentGuildMemoized(guildToSelect.id);\n                } else if (!guildToSelect && selectedGuild !== null) {\n                    console.log('[GuildContext Initial Effect] No valid initial guild, resetting.');\n                    setCurrentGuildMemoized(null);\n                }\n            } else if (!authLoading && !isAuthenticated) {\n                if (selectedGuild !== null) {\n                    console.log('[GuildContext Initial Effect] Not authenticated, resetting selection.');\n                    setCurrentGuildMemoized(null);\n                }\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"GuildProvider.useEffect\"], [\n        authLoading,\n        isAuthenticated,\n        availableGuilds,\n        setCurrentGuildMemoized\n    ]); // selectedGuild entfernt, da es im Callback gesetzt wird\n    // Memoisierten Kontextwert erstellen\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"GuildProvider.useMemo[contextValue]\": ()=>{\n            console.log('[GuildContext] Recalculating context value.');\n            return {\n                currentGuild: selectedGuild,\n                availableGuilds: availableGuilds || [],\n                setCurrentGuild: setCurrentGuildMemoized,\n                loading: authLoading\n            };\n        }\n    }[\"GuildProvider.useMemo[contextValue]\"], [\n        selectedGuild,\n        availableGuilds,\n        setCurrentGuildMemoized,\n        authLoading\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GuildContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\info\\\\Documents\\\\Discord Bot\\\\Chimera\\\\apps\\\\frontend\\\\src\\\\context\\\\guild-context.tsx\",\n        lineNumber: 119,\n        columnNumber: 5\n    }, this);\n}\n_s1(GuildProvider, \"OsRabFJIJysx/9OQg5vtTa0FrK8=\", false, function() {\n    return [\n        _auth_context__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = GuildProvider;\nvar _c;\n$RefreshReg$(_c, \"GuildProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/guild-context.tsx\n"));

/***/ })

});