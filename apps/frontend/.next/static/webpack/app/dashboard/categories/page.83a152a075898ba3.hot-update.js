"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/categories/page",{

/***/ "(app-pages-browser)/./src/components/dashboard/category-management/hooks/useZones.ts":
/*!************************************************************************!*\
  !*** ./src/components/dashboard/category-management/hooks/useZones.ts ***!
  \************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useZones: () => (/* binding */ useZones)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.3.0_@babel+core@7.2_be93e11acbbedc130c6eb3d215a0d5e8/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_core_toaster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/core/toaster */ \"(app-pages-browser)/./src/components/core/toaster.tsx\");\n/* harmony import */ var _services_zones__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/zones */ \"(app-pages-browser)/./src/services/zones.ts\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useZones auto */ \n\n\n\nconst useZones = (categoryId)=>{\n    const [zones, setZones] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const realtimeChannelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const loadedCategoryIdRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)('');\n    const initialLoadCompleteRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // --- Memoized Ladefunktion ---\n    const loadZones = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useZones.useCallback[loadZones]\": async (categoryIdToLoad)=>{\n            if (!categoryIdToLoad) {\n                console.log('[useZones] loadZones: No category ID.');\n                setZones([]);\n                loadedCategoryIdRef.current = '';\n                initialLoadCompleteRef.current = false;\n                return;\n            }\n            if (loading && loadedCategoryIdRef.current === categoryIdToLoad) {\n                console.log(\"[useZones] loadZones: Already loading for \".concat(categoryIdToLoad, \". Skipping.\"));\n                return;\n            }\n            console.log(\"[useZones] loadZones: Loading zones for category: \".concat(categoryIdToLoad));\n            setLoading(true);\n            setError(null);\n            initialLoadCompleteRef.current = false;\n            try {\n                const zonesData = await _services_zones__WEBPACK_IMPORTED_MODULE_2__.getZonesByCategory(categoryIdToLoad);\n                const enhancedZones = zonesData.map({\n                    \"useZones.useCallback[loadZones].enhancedZones\": (zone)=>({\n                            id: zone.id,\n                            name: zone.name,\n                            zoneKey: zone.zoneKey,\n                            minutesRequired: zone.intervalMinutes,\n                            pointsGranted: zone.pointsPerInterval,\n                            lastActive: '-',\n                            totalTimeSpent: 0,\n                            totalUsers: 0\n                        })\n                }[\"useZones.useCallback[loadZones].enhancedZones\"]);\n                setZones(enhancedZones);\n                loadedCategoryIdRef.current = categoryIdToLoad;\n                initialLoadCompleteRef.current = true;\n                console.log(\"[useZones] loadZones: \".concat(enhancedZones.length, \" zones loaded for \").concat(categoryIdToLoad));\n            } catch (err) {\n                console.error(\"[useZones] Error loading zones for \".concat(categoryIdToLoad, \":\"), err);\n                setError('Fehler beim Laden der Zonen');\n                setZones([]);\n                loadedCategoryIdRef.current = categoryIdToLoad;\n                initialLoadCompleteRef.current = true;\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useZones.useCallback[loadZones]\"], [\n        loading\n    ]); // Abhängig von loading\n    // --- Memoized Realtime Handler ---\n    const handleZoneChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useZones.useCallback[handleZoneChange]\": (payload)=>{\n            console.log('[useZones handleRealtimeEvent]', payload);\n            const { eventType, new: newRecord, old: oldRecord, table, schema } = payload;\n            if (schema !== 'public' || table !== 'zones') return;\n            if ((newRecord === null || newRecord === void 0 ? void 0 : newRecord.category_id) !== categoryId && (oldRecord === null || oldRecord === void 0 ? void 0 : oldRecord.category_id) !== categoryId) {\n                console.log(\"[useZones Realtime] Event ignored, wrong category ID.\");\n                return;\n            }\n            const record = newRecord || oldRecord;\n            if (!record || !record.id) return;\n            const zoneId = record.id;\n            switch(eventType){\n                case 'INSERT':\n                    if (newRecord) {\n                        console.log(\"[Realtime] Zone INSERT: \".concat(newRecord.id));\n                        const enhancedZone = {\n                            id: newRecord.id,\n                            name: newRecord.name,\n                            zoneKey: newRecord.zone_key,\n                            minutesRequired: newRecord.interval_minutes,\n                            pointsGranted: newRecord.points_per_interval,\n                            lastActive: '-',\n                            totalTimeSpent: 0,\n                            totalUsers: 0\n                        };\n                        setZones({\n                            \"useZones.useCallback[handleZoneChange]\": (prev)=>{\n                                // Verhindere Duplikate\n                                if (!prev.some({\n                                    \"useZones.useCallback[handleZoneChange]\": (z)=>z.id === enhancedZone.id\n                                }[\"useZones.useCallback[handleZoneChange]\"])) {\n                                    return [\n                                        ...prev,\n                                        enhancedZone\n                                    ];\n                                }\n                                return prev;\n                            }\n                        }[\"useZones.useCallback[handleZoneChange]\"]);\n                    }\n                    break;\n                case 'UPDATE':\n                    if (newRecord) {\n                        console.log(\"[Realtime] Zone UPDATE: \".concat(newRecord.id));\n                        setZones({\n                            \"useZones.useCallback[handleZoneChange]\": (prev)=>prev.map({\n                                    \"useZones.useCallback[handleZoneChange]\": (z)=>z.id === newRecord.id ? {\n                                            ...z,\n                                            name: newRecord.name,\n                                            zoneKey: newRecord.zone_key,\n                                            minutesRequired: newRecord.interval_minutes,\n                                            pointsGranted: newRecord.points_per_interval\n                                        } : z\n                                }[\"useZones.useCallback[handleZoneChange]\"])\n                        }[\"useZones.useCallback[handleZoneChange]\"]);\n                    }\n                    break;\n                case 'DELETE':\n                    if (oldRecord) {\n                        console.log(\"[Realtime] Zone DELETE: \".concat(oldRecord.id));\n                        setZones({\n                            \"useZones.useCallback[handleZoneChange]\": (prev)=>prev.filter({\n                                    \"useZones.useCallback[handleZoneChange]\": (z)=>z.id !== oldRecord.id\n                                }[\"useZones.useCallback[handleZoneChange]\"])\n                        }[\"useZones.useCallback[handleZoneChange]\"]);\n                    }\n                    break;\n                default:\n                    console.log(\"[useZones Realtime] Unhandled event type: \".concat(eventType));\n            }\n        }\n    }[\"useZones.useCallback[handleZoneChange]\"], [\n        categoryId,\n        setZones\n    ]); // Nur von categoryId und setZones abhängig\n    // --- Haupt-useEffect ---\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useZones.useEffect\": ()=>{\n            console.log(\"[useZones Effect] Running for categoryId: \".concat(categoryId || 'none'));\n            if (!categoryId) {\n                console.log('[useZones Effect] No categoryId, resetting.');\n                setZones([]);\n                loadedCategoryIdRef.current = '';\n                initialLoadCompleteRef.current = false;\n                if (realtimeChannelRef.current) {\n                    _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.removeChannel(realtimeChannelRef.current);\n                    realtimeChannelRef.current = null;\n                }\n                return;\n            }\n            if (loadedCategoryIdRef.current !== categoryId) {\n                loadZones(categoryId);\n            }\n            // Subscription Logic\n            let channel = realtimeChannelRef.current;\n            const channelName = \"zones:\".concat(categoryId);\n            if (!channel || channel.topic !== \"realtime:\".concat(channelName)) {\n                if (channel) {\n                    _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.removeChannel(channel);\n                }\n                console.log(\"[useZones Effect] Setting up channel: \".concat(channelName));\n                channel = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.channel(channelName);\n                channel.on('postgres_changes', {\n                    event: '*',\n                    schema: 'public',\n                    table: 'zones',\n                    filter: \"category_id=eq.\".concat(categoryId)\n                }, handleZoneChange).subscribe({\n                    \"useZones.useEffect\": (status, err)=>{\n                        console.log(\"[useZones Effect] Sub status \".concat(channelName, \":\"), status, err || '');\n                        if (status === 'SUBSCRIBED') {\n                            realtimeChannelRef.current = channel;\n                            if (!initialLoadCompleteRef.current) {\n                                console.log('[useZones Effect] Re-fetching zones after successful subscription.');\n                                loadZones(categoryId);\n                            }\n                        } else {\n                            realtimeChannelRef.current = null;\n                        }\n                    }\n                }[\"useZones.useEffect\"]);\n            }\n            // Cleanup\n            return ({\n                \"useZones.useEffect\": ()=>{\n                    console.log(\"[useZones Effect] Cleanup for categoryId: \".concat(categoryId));\n                    if (channel) {\n                        console.log(\"[useZones Effect] Removing channel \".concat(channel.topic));\n                        _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.removeChannel(channel);\n                        realtimeChannelRef.current = null;\n                    }\n                }\n            })[\"useZones.useEffect\"];\n        }\n    }[\"useZones.useEffect\"], [\n        categoryId,\n        loadZones,\n        handleZoneChange\n    ]); // Korrekte Abhängigkeiten\n    // --- Restliche Funktionen ---\n    const saveZone = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useZones.useCallback[saveZone]\": async (zoneData)=>{\n            // ... Logic ... (wie in deiner Version, kann bleiben)\n            if (!categoryId) {\n                _components_core_toaster__WEBPACK_IMPORTED_MODULE_1__.toast.error('Keine Kategorie ID');\n                return false;\n            }\n            setLoading(true);\n            try {\n                if (zoneData.id) {\n                    await _services_zones__WEBPACK_IMPORTED_MODULE_2__.updateZone(zoneData.id, {});\n                } else {\n                    await _services_zones__WEBPACK_IMPORTED_MODULE_2__.createZone(categoryId, {});\n                }\n                _components_core_toaster__WEBPACK_IMPORTED_MODULE_1__.toast.success('Zone gespeichert.');\n                return true;\n            } catch (err) {\n                return false;\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useZones.useCallback[saveZone]\"], [\n        categoryId\n    ]);\n    const deleteZone = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useZones.useCallback[deleteZone]\": async (zoneId)=>{\n            // ... Logic ... (wie in deiner Version, kann bleiben)\n            setLoading(true);\n            try {\n                const result = await _services_zones__WEBPACK_IMPORTED_MODULE_2__.deleteZone(zoneId);\n                if (result.success) _components_core_toaster__WEBPACK_IMPORTED_MODULE_1__.toast.success('Zone gelöscht.');\n                return result;\n            } catch (err) {\n                return {\n                    success: false,\n                    message: 'Fehler'\n                };\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useZones.useCallback[deleteZone]\"], []);\n    const refetch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useZones.useCallback[refetch]\": ()=>{\n            console.log('[useZones] refetch triggered');\n            if (categoryId) {\n                loadedCategoryIdRef.current = '';\n                initialLoadCompleteRef.current = false;\n                loadZones(categoryId);\n            }\n        }\n    }[\"useZones.useCallback[refetch]\"], [\n        categoryId,\n        loadZones\n    ]);\n    return {\n        zones,\n        loading,\n        error,\n        saveZone,\n        deleteZone,\n        refetch\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2Rhc2hib2FyZC9jYXRlZ29yeS1tYW5hZ2VtZW50L2hvb2tzL3VzZVpvbmVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs4REFFaUU7QUFDZjtBQUVEO0FBR1A7QUFZbkMsTUFBTU8sV0FBVyxDQUFDQztJQUN2QixNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR1YsK0NBQVFBLENBQWlCLEVBQUU7SUFDckQsTUFBTSxDQUFDVyxTQUFTQyxXQUFXLEdBQUdaLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ2EsT0FBT0MsU0FBUyxHQUFHZCwrQ0FBUUEsQ0FBZ0I7SUFDbEQsTUFBTWUscUJBQXFCWiw2Q0FBTUEsQ0FBeUI7SUFDMUQsTUFBTWEsc0JBQXNCYiw2Q0FBTUEsQ0FBUztJQUMzQyxNQUFNYyx5QkFBeUJkLDZDQUFNQSxDQUFDO0lBRXRDLGdDQUFnQztJQUNoQyxNQUFNZSxZQUFZaEIsa0RBQVdBOzJDQUFDLE9BQU9pQjtZQUNuQyxJQUFJLENBQUNBLGtCQUFrQjtnQkFDckJDLFFBQVFDLEdBQUcsQ0FBQztnQkFDWlgsU0FBUyxFQUFFO2dCQUNYTSxvQkFBb0JNLE9BQU8sR0FBRztnQkFDOUJMLHVCQUF1QkssT0FBTyxHQUFHO2dCQUNqQztZQUNGO1lBQ0MsSUFBSVgsV0FBV0ssb0JBQW9CTSxPQUFPLEtBQUtILGtCQUFrQjtnQkFDOURDLFFBQVFDLEdBQUcsQ0FBQyw2Q0FBOEQsT0FBakJGLGtCQUFpQjtnQkFDMUU7WUFDSjtZQUNBQyxRQUFRQyxHQUFHLENBQUMscURBQXNFLE9BQWpCRjtZQUNqRVAsV0FBVztZQUNYRSxTQUFTO1lBQ1RHLHVCQUF1QkssT0FBTyxHQUFHO1lBRWpDLElBQUk7Z0JBQ0YsTUFBTUMsWUFBWSxNQUFNbEIsK0RBQStCLENBQUNjO2dCQUN4RCxNQUFNTSxnQkFBZ0NGLFVBQVVHLEdBQUc7cUVBQUNDLENBQUFBLE9BQVM7NEJBQzNEQyxJQUFJRCxLQUFLQyxFQUFF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Z0JBQ0FKLDJEQUFLQSxDQUFDb0UsT0FBTyxDQUFDO2dCQUNkLE9BQU87WUFDVCxFQUFFLE9BQU9qQyxLQUFVO2dCQUF1QixPQUFPO1lBQU8sU0FDaEQ7Z0JBQUUzQixXQUFXO1lBQVE7UUFDaEM7eUNBQUc7UUFBQ0o7S0FBVztJQUVmLE1BQU1pRSxhQUFhdkUsa0RBQVdBOzRDQUFDLE9BQU9pRDtZQUNwQyxzREFBc0Q7WUFDdER2QyxXQUFXO1lBQ1gsSUFBSTtnQkFDRixNQUFNOEQsU0FBUyxNQUFNckUsdURBQXVCLENBQUM4QztnQkFDN0MsSUFBSXVCLE9BQU9GLE9BQU8sRUFBRXBFLDJEQUFLQSxDQUFDb0UsT0FBTyxDQUFDO2dCQUNsQyxPQUFPRTtZQUNULEVBQUUsT0FBT25DLEtBQVU7Z0JBQXVCLE9BQU87b0JBQUVpQyxTQUFTO29CQUFPRyxTQUFTO2dCQUFTO1lBQUcsU0FDaEY7Z0JBQUUvRCxXQUFXO1lBQVE7UUFDL0I7MkNBQUcsRUFBRTtJQUVMLE1BQU1nRSxVQUFVMUUsa0RBQVdBO3lDQUFDO1lBQzFCa0IsUUFBUUMsR0FBRyxDQUFDO1lBQ1osSUFBSWIsWUFBWTtnQkFDZFEsb0JBQW9CTSxPQUFPLEdBQUc7Z0JBQzlCTCx1QkFBdUJLLE9BQU8sR0FBRztnQkFDakNKLFVBQVVWO1lBQ1o7UUFDRjt3Q0FBRztRQUFDQTtRQUFZVTtLQUFVO0lBRTFCLE9BQU87UUFBRVQ7UUFBT0U7UUFBU0U7UUFBT3VEO1FBQVVLO1FBQVlHO0lBQVE7QUFDaEUsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxpbmZvXFxEb2N1bWVudHNcXERpc2NvcmQgQm90XFxDaGltZXJhXFxhcHBzXFxmcm9udGVuZFxcc3JjXFxjb21wb25lbnRzXFxkYXNoYm9hcmRcXGNhdGVnb3J5LW1hbmFnZW1lbnRcXGhvb2tzXFx1c2Vab25lcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gJ0AvY29tcG9uZW50cy9jb3JlL3RvYXN0ZXInO1xuaW1wb3J0IHsgRW5oYW5jZWRab25lIH0gZnJvbSAnLi91c2VDYXRlZ29yaWVzJzsgLy8gVHlwIGltcG9ydGllcmVuXG5pbXBvcnQgKiBhcyB6b25lc1NlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy96b25lcyc7XG5pbXBvcnQgeyBDcmVhdGVab25lRHRvLCBVcGRhdGVab25lRHRvIH0gZnJvbSAnc2hhcmVkLXR5cGVzJztcbmltcG9ydCB7IFJlYWx0aW1lQ2hhbm5lbCwgUmVhbHRpbWVQb3N0Z3Jlc0NoYW5nZXNQYXlsb2FkIH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UnO1xuXG4vLyBJbnRlcmZhY2UgWm9uZUlucHV0IGJsZWlidCBnbGVpY2guLi5cbmV4cG9ydCBpbnRlcmZhY2UgWm9uZUlucHV0IHtcbiAgaWQ/OiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgem9uZUtleTogc3RyaW5nO1xuICBtaW51dGVzUmVxdWlyZWQ6IG51bWJlcjtcbiAgcG9pbnRzR3JhbnRlZDogbnVtYmVyO1xufVxuXG5cbmV4cG9ydCBjb25zdCB1c2Vab25lcyA9IChjYXRlZ29yeUlkPzogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IFt6b25lcywgc2V0Wm9uZXNdID0gdXNlU3RhdGU8RW5oYW5jZWRab25lW10+KFtdKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCByZWFsdGltZUNoYW5uZWxSZWYgPSB1c2VSZWY8UmVhbHRpbWVDaGFubmVsIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IGxvYWRlZENhdGVnb3J5SWRSZWYgPSB1c2VSZWY8c3RyaW5nPignJyk7XG4gIGNvbnN0IGluaXRpYWxMb2FkQ29tcGxldGVSZWYgPSB1c2VSZWYoZmFsc2UpO1xuXG4gIC8vIC0tLSBNZW1vaXplZCBMYWRlZnVua3Rpb24gLS0tXG4gIGNvbnN0IGxvYWRab25lcyA9IHVzZUNhbGxiYWNrKGFzeW5jIChjYXRlZ29yeUlkVG9Mb2FkOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWNhdGVnb3J5SWRUb0xvYWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbdXNlWm9uZXNdIGxvYWRab25lczogTm8gY2F0ZWdvcnkgSUQuJyk7XG4gICAgICBzZXRab25lcyhbXSk7XG4gICAgICBsb2FkZWRDYXRlZ29yeUlkUmVmLmN1cnJlbnQgPSAnJztcbiAgICAgIGluaXRpYWxMb2FkQ29tcGxldGVSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAgaWYgKGxvYWRpbmcgJiYgbG9hZGVkQ2F0ZWdvcnlJZFJlZi5jdXJyZW50ID09PSBjYXRlZ29yeUlkVG9Mb2FkKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBbdXNlWm9uZXNdIGxvYWRab25lczogQWxyZWFkeSBsb2FkaW5nIGZvciAke2NhdGVnb3J5SWRUb0xvYWR9LiBTa2lwcGluZy5gKTtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGNvbnNvbGUubG9nKGBbdXNlWm9uZXNdIGxvYWRab25lczogTG9hZGluZyB6b25lcyBmb3IgY2F0ZWdvcnk6ICR7Y2F0ZWdvcnlJZFRvTG9hZH1gKTtcbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIGluaXRpYWxMb2FkQ29tcGxldGVSZWYuY3VycmVudCA9IGZhbHNlO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHpvbmVzRGF0YSA9IGF3YWl0IHpvbmVzU2VydmljZS5nZXRab25lc0J5Q2F0ZWdvcnkoY2F0ZWdvcnlJZFRvTG9hZCk7XG4gICAgICBjb25zdCBlbmhhbmNlZFpvbmVzOiBFbmhhbmNlZFpvbmVbXSA9IHpvbmVzRGF0YS5tYXAoem9uZSA9PiAoe1xuICAgICAgICBpZDogem9uZS5pZCwgbmFtZTogem9uZS5uYW1lLCB6b25lS2V5OiB6b25lLnpvbmVLZXksXG4gICAgICAgIG1pbnV0ZXNSZXF1aXJlZDogem9uZS5pbnRlcnZhbE1pbnV0ZXMsIHBvaW50c0dyYW50ZWQ6IHpvbmUucG9pbnRzUGVySW50ZXJ2YWwsXG4gICAgICAgIGxhc3RBY3RpdmU6ICctJywgdG90YWxUaW1lU3BlbnQ6IDAsIHRvdGFsVXNlcnM6IDBcbiAgICAgIH0pKTtcbiAgICAgIHNldFpvbmVzKGVuaGFuY2VkWm9uZXMpO1xuICAgICAgbG9hZGVkQ2F0ZWdvcnlJZFJlZi5jdXJyZW50ID0gY2F0ZWdvcnlJZFRvTG9hZDtcbiAgICAgIGluaXRpYWxMb2FkQ29tcGxldGVSZWYuY3VycmVudCA9IHRydWU7XG4gICAgICBjb25zb2xlLmxvZyhgW3VzZVpvbmVzXSBsb2FkWm9uZXM6ICR7ZW5oYW5jZWRab25lcy5sZW5ndGh9IHpvbmVzIGxvYWRlZCBmb3IgJHtjYXRlZ29yeUlkVG9Mb2FkfWApO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihgW3VzZVpvbmVzXSBFcnJvciBsb2FkaW5nIHpvbmVzIGZvciAke2NhdGVnb3J5SWRUb0xvYWR9OmAsIGVycik7XG4gICAgICBzZXRFcnJvcignRmVobGVyIGJlaW0gTGFkZW4gZGVyIFpvbmVuJyk7XG4gICAgICBzZXRab25lcyhbXSk7XG4gICAgICBsb2FkZWRDYXRlZ29yeUlkUmVmLmN1cnJlbnQgPSBjYXRlZ29yeUlkVG9Mb2FkO1xuICAgICAgaW5pdGlhbExvYWRDb21wbGV0ZVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9LCBbbG9hZGluZ10pOyAvLyBBYmjDpG5naWcgdm9uIGxvYWRpbmdcblxuICAvLyAtLS0gTWVtb2l6ZWQgUmVhbHRpbWUgSGFuZGxlciAtLS1cbiAgY29uc3QgaGFuZGxlWm9uZUNoYW5nZSA9IHVzZUNhbGxiYWNrKChwYXlsb2FkOiBSZWFsdGltZVBvc3RncmVzQ2hhbmdlc1BheWxvYWQ8YW55PikgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdbdXNlWm9uZXMgaGFuZGxlUmVhbHRpbWVFdmVudF0nLCBwYXlsb2FkKTtcbiAgICBjb25zdCB7IGV2ZW50VHlwZSwgbmV3OiBuZXdSZWNvcmQsIG9sZDogb2xkUmVjb3JkLCB0YWJsZSwgc2NoZW1hIH0gPSBwYXlsb2FkO1xuXG4gICAgaWYgKHNjaGVtYSAhPT0gJ3B1YmxpYycgfHwgdGFibGUgIT09ICd6b25lcycpIHJldHVybjtcbiAgICBpZiAobmV3UmVjb3JkPy5jYXRlZ29yeV9pZCAhPT0gY2F0ZWdvcnlJZCAmJiBvbGRSZWNvcmQ/LmNhdGVnb3J5X2lkICE9PSBjYXRlZ29yeUlkKSB7XG4gICAgICAgY29uc29sZS5sb2coYFt1c2Vab25lcyBSZWFsdGltZV0gRXZlbnQgaWdub3JlZCwgd3JvbmcgY2F0ZWdvcnkgSUQuYCk7XG4gICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHJlY29yZCA9IG5ld1JlY29yZCB8fCBvbGRSZWNvcmQ7XG4gICAgaWYgKCFyZWNvcmQgfHwgIXJlY29yZC5pZCkgcmV0dXJuO1xuICAgIGNvbnN0IHpvbmVJZCA9IHJlY29yZC5pZDtcblxuICAgIHN3aXRjaCAoZXZlbnRUeXBlKSB7XG4gICAgICBjYXNlICdJTlNFUlQnOlxuICAgICAgICBpZiAobmV3UmVjb3JkKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYFtSZWFsdGltZV0gWm9uZSBJTlNFUlQ6ICR7bmV3UmVjb3JkLmlkfWApO1xuICAgICAgICAgIGNvbnN0IGVuaGFuY2VkWm9uZTogRW5oYW5jZWRab25lID0ge1xuICAgICAgICAgICAgaWQ6IG5ld1JlY29yZC5pZCwgbmFtZTogbmV3UmVjb3JkLm5hbWUsIHpvbmVLZXk6IG5ld1JlY29yZC56b25lX2tleSxcbiAgICAgICAgICAgIG1pbnV0ZXNSZXF1aXJlZDogbmV3UmVjb3JkLmludGVydmFsX21pbnV0ZXMsIHBvaW50c0dyYW50ZWQ6IG5ld1JlY29yZC5wb2ludHNfcGVyX2ludGVydmFsLFxuICAgICAgICAgICAgbGFzdEFjdGl2ZTogJy0nLCB0b3RhbFRpbWVTcGVudDogMCwgdG90YWxVc2VyczogMFxuICAgICAgICAgIH07XG4gICAgICAgICAgc2V0Wm9uZXMocHJldiA9PiB7XG4gICAgICAgICAgICAgIC8vIFZlcmhpbmRlcmUgRHVwbGlrYXRlXG4gICAgICAgICAgICAgIGlmICghcHJldi5zb21lKHogPT4gei5pZCA9PT0gZW5oYW5jZWRab25lLmlkKSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFsuLi5wcmV2LCBlbmhhbmNlZFpvbmVdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiBwcmV2O1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnVVBEQVRFJzpcbiAgICAgICAgaWYgKG5ld1JlY29yZCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBbUmVhbHRpbWVdIFpvbmUgVVBEQVRFOiAke25ld1JlY29yZC5pZH1gKTtcbiAgICAgICAgICBzZXRab25lcyhwcmV2ID0+IHByZXYubWFwKHogPT4gei5pZCA9PT0gbmV3UmVjb3JkLmlkID8ge1xuICAgICAgICAgICAgLi4ueixcbiAgICAgICAgICAgIG5hbWU6IG5ld1JlY29yZC5uYW1lLFxuICAgICAgICAgICAgem9uZUtleTogbmV3UmVjb3JkLnpvbmVfa2V5LFxuICAgICAgICAgICAgbWludXRlc1JlcXVpcmVkOiBuZXdSZWNvcmQuaW50ZXJ2YWxfbWludXRlcyxcbiAgICAgICAgICAgIHBvaW50c0dyYW50ZWQ6IG5ld1JlY29yZC5wb2ludHNfcGVyX2ludGVydmFsLFxuICAgICAgICAgIH0gOiB6KSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdERUxFVEUnOlxuICAgICAgICBpZiAob2xkUmVjb3JkKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYFtSZWFsdGltZV0gWm9uZSBERUxFVEU6ICR7b2xkUmVjb3JkLmlkfWApO1xuICAgICAgICAgIHNldFpvbmVzKHByZXYgPT4gcHJldi5maWx0ZXIoeiA9PiB6LmlkICE9PSBvbGRSZWNvcmQuaWQpKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnNvbGUubG9nKGBbdXNlWm9uZXMgUmVhbHRpbWVdIFVuaGFuZGxlZCBldmVudCB0eXBlOiAke2V2ZW50VHlwZX1gKTtcbiAgICB9XG4gIH0sIFtjYXRlZ29yeUlkLCBzZXRab25lc10pOyAvLyBOdXIgdm9uIGNhdGVnb3J5SWQgdW5kIHNldFpvbmVzIGFiaMOkbmdpZ1xuXG4gIC8vIC0tLSBIYXVwdC11c2VFZmZlY3QgLS0tXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFt1c2Vab25lcyBFZmZlY3RdIFJ1bm5pbmcgZm9yIGNhdGVnb3J5SWQ6ICR7Y2F0ZWdvcnlJZCB8fCAnbm9uZSd9YCk7XG5cbiAgICBpZiAoIWNhdGVnb3J5SWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbdXNlWm9uZXMgRWZmZWN0XSBObyBjYXRlZ29yeUlkLCByZXNldHRpbmcuJyk7XG4gICAgICBzZXRab25lcyhbXSk7XG4gICAgICBsb2FkZWRDYXRlZ29yeUlkUmVmLmN1cnJlbnQgPSAnJztcbiAgICAgIGluaXRpYWxMb2FkQ29tcGxldGVSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgaWYgKHJlYWx0aW1lQ2hhbm5lbFJlZi5jdXJyZW50KSB7XG4gICAgICAgIHN1cGFiYXNlLnJlbW92ZUNoYW5uZWwocmVhbHRpbWVDaGFubmVsUmVmLmN1cnJlbnQpO1xuICAgICAgICByZWFsdGltZUNoYW5uZWxSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGxvYWRlZENhdGVnb3J5SWRSZWYuY3VycmVudCAhPT0gY2F0ZWdvcnlJZCkge1xuICAgICAgbG9hZFpvbmVzKGNhdGVnb3J5SWQpO1xuICAgIH1cblxuICAgIC8vIFN1YnNjcmlwdGlvbiBMb2dpY1xuICAgIGxldCBjaGFubmVsOiBSZWFsdGltZUNoYW5uZWwgfCBudWxsID0gcmVhbHRpbWVDaGFubmVsUmVmLmN1cnJlbnQ7XG4gICAgY29uc3QgY2hhbm5lbE5hbWUgPSBgem9uZXM6JHtjYXRlZ29yeUlkfWA7XG5cbiAgICBpZiAoIWNoYW5uZWwgfHwgY2hhbm5lbC50b3BpYyAhPT0gYHJlYWx0aW1lOiR7Y2hhbm5lbE5hbWV9YCkge1xuICAgICAgaWYgKGNoYW5uZWwpIHtcbiAgICAgICAgc3VwYWJhc2UucmVtb3ZlQ2hhbm5lbChjaGFubmVsKTtcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUubG9nKGBbdXNlWm9uZXMgRWZmZWN0XSBTZXR0aW5nIHVwIGNoYW5uZWw6ICR7Y2hhbm5lbE5hbWV9YCk7XG4gICAgICBjaGFubmVsID0gc3VwYWJhc2UuY2hhbm5lbChjaGFubmVsTmFtZSk7XG4gICAgICBjaGFubmVsXG4gICAgICAgIC5vbigncG9zdGdyZXNfY2hhbmdlcycsIHtcbiAgICAgICAgICBldmVudDogJyonLCBzY2hlbWE6ICdwdWJsaWMnLCB0YWJsZTogJ3pvbmVzJyxcbiAgICAgICAgICBmaWx0ZXI6IGBjYXRlZ29yeV9pZD1lcS4ke2NhdGVnb3J5SWR9YFxuICAgICAgICB9LCBoYW5kbGVab25lQ2hhbmdlKVxuICAgICAgICAuc3Vic2NyaWJlKChzdGF0dXMsIGVycikgPT4ge1xuICAgICAgICAgICBjb25zb2xlLmxvZyhgW3VzZVpvbmVzIEVmZmVjdF0gU3ViIHN0YXR1cyAke2NoYW5uZWxOYW1lfTpgLCBzdGF0dXMsIGVyciB8fCAnJyk7XG4gICAgICAgICAgIGlmIChzdGF0dXMgPT09ICdTVUJTQ1JJQkVEJykge1xuICAgICAgICAgICAgICByZWFsdGltZUNoYW5uZWxSZWYuY3VycmVudCA9IGNoYW5uZWw7XG4gICAgICAgICAgICAgIGlmICghaW5pdGlhbExvYWRDb21wbGV0ZVJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnW3VzZVpvbmVzIEVmZmVjdF0gUmUtZmV0Y2hpbmcgem9uZXMgYWZ0ZXIgc3VjY2Vzc2Z1bCBzdWJzY3JpcHRpb24uJyk7XG4gICAgICAgICAgICAgICAgICBsb2FkWm9uZXMoY2F0ZWdvcnlJZCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVhbHRpbWVDaGFubmVsUmVmLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIENsZWFudXBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYFt1c2Vab25lcyBFZmZlY3RdIENsZWFudXAgZm9yIGNhdGVnb3J5SWQ6ICR7Y2F0ZWdvcnlJZH1gKTtcbiAgICAgIGlmIChjaGFubmVsKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBbdXNlWm9uZXMgRWZmZWN0XSBSZW1vdmluZyBjaGFubmVsICR7Y2hhbm5lbC50b3BpY31gKTtcbiAgICAgICAgc3VwYWJhc2UucmVtb3ZlQ2hhbm5lbChjaGFubmVsKTtcbiAgICAgICAgcmVhbHRpbWVDaGFubmVsUmVmLmN1cnJlbnQgPSBudWxsO1xuICAgICAgfVxuICAgIH07XG4gIH0sIFtjYXRlZ29yeUlkLCBsb2FkWm9uZXMsIGhhbmRsZVpvbmVDaGFuZ2VdKTsgLy8gS29ycmVrdGUgQWJow6RuZ2lna2VpdGVuXG5cbiAgLy8gLS0tIFJlc3RsaWNoZSBGdW5rdGlvbmVuIC0tLVxuICBjb25zdCBzYXZlWm9uZSA9IHVzZUNhbGxiYWNrKGFzeW5jICh6b25lRGF0YTogWm9uZUlucHV0KTogUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gICAgIC8vIC4uLiBMb2dpYyAuLi4gKHdpZSBpbiBkZWluZXIgVmVyc2lvbiwga2FubiBibGVpYmVuKVxuICAgICBpZiAoIWNhdGVnb3J5SWQpIHsgdG9hc3QuZXJyb3IoJ0tlaW5lIEthdGVnb3JpZSBJRCcpOyByZXR1cm4gZmFsc2U7IH1cbiAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgdHJ5IHtcbiAgICAgICBpZiAoem9uZURhdGEuaWQpIHtcbiAgICAgICAgIGF3YWl0IHpvbmVzU2VydmljZS51cGRhdGVab25lKHpvbmVEYXRhLmlkLCB7IC8qIERUTyAqLyB9KTtcbiAgICAgICB9IGVsc2Uge1xuICAgICAgICAgYXdhaXQgem9uZXNTZXJ2aWNlLmNyZWF0ZVpvbmUoY2F0ZWdvcnlJZCwgeyAvKiBEVE8gKi8gfSk7XG4gICAgICAgfVxuICAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1pvbmUgZ2VzcGVpY2hlcnQuJyk7XG4gICAgICAgcmV0dXJuIHRydWU7XG4gICAgIH0gY2F0Y2ggKGVycjogYW55KSB7IC8qIC4uLiBGZWhsZXIgLi4uICovIHJldHVybiBmYWxzZTsgfVxuICAgICBmaW5hbGx5IHsgc2V0TG9hZGluZyhmYWxzZSk7IH1cbiAgfSwgW2NhdGVnb3J5SWRdKTtcblxuICBjb25zdCBkZWxldGVab25lID0gdXNlQ2FsbGJhY2soYXN5bmMgKHpvbmVJZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IG1lc3NhZ2U/OiBzdHJpbmcgfT4gPT4ge1xuICAgIC8vIC4uLiBMb2dpYyAuLi4gKHdpZSBpbiBkZWluZXIgVmVyc2lvbiwga2FubiBibGVpYmVuKVxuICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHpvbmVzU2VydmljZS5kZWxldGVab25lKHpvbmVJZCk7XG4gICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHRvYXN0LnN1Y2Nlc3MoJ1pvbmUgZ2Vsw7ZzY2h0LicpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlcnI6IGFueSkgeyAvKiAuLi4gRmVobGVyIC4uLiAqLyByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ0ZlaGxlcicgfTsgfVxuICAgIGZpbmFsbHkgeyBzZXRMb2FkaW5nKGZhbHNlKTsgfVxuICB9LCBbXSk7XG5cbiAgY29uc3QgcmVmZXRjaCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnW3VzZVpvbmVzXSByZWZldGNoIHRyaWdnZXJlZCcpO1xuICAgIGlmIChjYXRlZ29yeUlkKSB7XG4gICAgICBsb2FkZWRDYXRlZ29yeUlkUmVmLmN1cnJlbnQgPSAnJztcbiAgICAgIGluaXRpYWxMb2FkQ29tcGxldGVSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgbG9hZFpvbmVzKGNhdGVnb3J5SWQpO1xuICAgIH1cbiAgfSwgW2NhdGVnb3J5SWQsIGxvYWRab25lc10pO1xuXG4gIHJldHVybiB7IHpvbmVzLCBsb2FkaW5nLCBlcnJvciwgc2F2ZVpvbmUsIGRlbGV0ZVpvbmUsIHJlZmV0Y2ggfTtcbn07Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VSZWYiLCJ0b2FzdCIsInpvbmVzU2VydmljZSIsInN1cGFiYXNlIiwidXNlWm9uZXMiLCJjYXRlZ29yeUlkIiwiem9uZXMiLCJzZXRab25lcyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsInJlYWx0aW1lQ2hhbm5lbFJlZiIsImxvYWRlZENhdGVnb3J5SWRSZWYiLCJpbml0aWFsTG9hZENvbXBsZXRlUmVmIiwibG9hZFpvbmVzIiwiY2F0ZWdvcnlJZFRvTG9hZCIsImNvbnNvbGUiLCJsb2ciLCJjdXJyZW50Iiwiem9uZXNEYXRhIiwiZ2V0Wm9uZXNCeUNhdGVnb3J5IiwiZW5oYW5jZWRab25lcyIsIm1hcCIsInpvbmUiLCJpZCIsIm5hbWUiLCJ6b25lS2V5IiwibWludXRlc1JlcXVpcmVkIiwiaW50ZXJ2YWxNaW51dGVzIiwicG9pbnRzR3JhbnRlZCIsInBvaW50c1BlckludGVydmFsIiwibGFzdEFjdGl2ZSIsInRvdGFsVGltZVNwZW50IiwidG90YWxVc2VycyIsImxlbmd0aCIsImVyciIsImhhbmRsZVpvbmVDaGFuZ2UiLCJwYXlsb2FkIiwiZXZlbnRUeXBlIiwibmV3IiwibmV3UmVjb3JkIiwib2xkIiwib2xkUmVjb3JkIiwidGFibGUiLCJzY2hlbWEiLCJjYXRlZ29yeV9pZCIsInJlY29yZCIsInpvbmVJZCIsImVuaGFuY2VkWm9uZSIsInpvbmVfa2V5IiwiaW50ZXJ2YWxfbWludXRlcyIsInBvaW50c19wZXJfaW50ZXJ2YWwiLCJwcmV2Iiwic29tZSIsInoiLCJmaWx0ZXIiLCJyZW1vdmVDaGFubmVsIiwiY2hhbm5lbCIsImNoYW5uZWxOYW1lIiwidG9waWMiLCJvbiIsImV2ZW50Iiwic3Vic2NyaWJlIiwic3RhdHVzIiwic2F2ZVpvbmUiLCJ6b25lRGF0YSIsInVwZGF0ZVpvbmUiLCJjcmVhdGVab25lIiwic3VjY2VzcyIsImRlbGV0ZVpvbmUiLCJyZXN1bHQiLCJtZXNzYWdlIiwicmVmZXRjaCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/dashboard/category-management/hooks/useZones.ts\n"));

/***/ })

});